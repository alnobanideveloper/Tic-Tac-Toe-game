{"ast":null,"code":"var _jsxFileName = \"/home/saad/Documents/reactJs/Tic-Tac-Toe/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Board from './components/board';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [player, setPlayer] = useState(0);\n  const [boardState, setBoardState] = useState([null, null, null, null, null, null, null, null, null]);\n  const switchPlayer = () => {\n    setPlayer(!player);\n  };\n  const onClick = id => {\n    if (boardState[id] == null) {\n      if (player) setBoardState(boardState.map((element, index) => index === id ? 'o' : element));else setBoardState(boardState.map((element, index) => index === id ? 'x' : element));\n      checkGame();\n      switchPlayer();\n    }\n  };\n  const checkGame = () => {\n    const winningCombinations = [[0, 1, 2],\n    // first row\n    [3, 4, 5],\n    // second row\n    [6, 7, 8],\n    // third row\n    [0, 3, 6],\n    // first column\n    [1, 4, 7],\n    // second column\n    [2, 5, 8],\n    // third column\n    [0, 4, 8],\n    // diagonal 1\n    [2, 4, 6] // diagonal 2\n    ];\n    for (let combination of winningCombinations) {\n      const [a, b, c] = combination;\n      console.log(boardState[a], boardState[b]);\n      if (boardState[a] && boardState[a] === boardState[b] && boardState[a] === boardState[c]) {\n        console.log('player win', player);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      onClick: onClick,\n      board: boardState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mbTZewQkzT7155Qd1Jj7ttY1nl4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","useState","jsxDEV","_jsxDEV","App","_s","player","setPlayer","boardState","setBoardState","switchPlayer","onClick","id","map","element","index","checkGame","winningCombinations","combination","a","b","c","console","log","className","children","board","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/saad/Documents/reactJs/Tic-Tac-Toe/tic-tac-toe/src/App.js"],"sourcesContent":["import './App.css';\nimport Board  from './components/board';\nimport { useState } from 'react';\nfunction App() {\n\n  const [player , setPlayer] = useState(0)\n  const [boardState , setBoardState] = useState([null,null,null,null,null,null,null,null,null])\n\n  const switchPlayer = ()=>{\n    setPlayer(!player);\n  }\n\n  const onClick = (id)=>{\n    if(boardState[id] == null){\n      if(player)\n        setBoardState(boardState.map((element , index)=>\n          index === id ? 'o' : element\n        ))\n      \n\n      else\n        setBoardState(boardState.map((element , index)=>\n      index === id ? 'x' : element\n      ))\n      \n      checkGame();\n      switchPlayer();\n    }\n  }  \n  const checkGame = () => {\n    const winningCombinations = [\n      [0, 1, 2], // first row\n      [3, 4, 5], // second row\n      [6, 7, 8], // third row\n      [0, 3, 6], // first column\n      [1, 4, 7], // second column\n      [2, 5, 8], // third column\n      [0, 4, 8], // diagonal 1\n      [2, 4, 6], // diagonal 2\n    ];\n  \n    for (let combination of winningCombinations) {\n      const [a, b, c] = combination;\n      console.log(boardState[a] , boardState[b])\n      if (boardState[a] && boardState[a] === boardState[b] && boardState[a] === boardState[c]) {\n        console.log('player win', player);\n      }\n    }\n  };\n  \n\n  return (\n    <div className=\"App\">\n      <Board onClick = {onClick} board={boardState}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAO,oBAAoB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAAGC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,UAAU,EAAGC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;EAE7F,MAAMS,YAAY,GAAGA,CAAA,KAAI;IACvBH,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMK,OAAO,GAAIC,EAAE,IAAG;IACpB,IAAGJ,UAAU,CAACI,EAAE,CAAC,IAAI,IAAI,EAAC;MACxB,IAAGN,MAAM,EACPG,aAAa,CAACD,UAAU,CAACK,GAAG,CAAC,CAACC,OAAO,EAAGC,KAAK,KAC3CA,KAAK,KAAKH,EAAE,GAAG,GAAG,GAAGE,OACvB,CAAC,CAAC,MAIFL,aAAa,CAACD,UAAU,CAACK,GAAG,CAAC,CAACC,OAAO,EAAGC,KAAK,KAC/CA,KAAK,KAAKH,EAAE,GAAG,GAAG,GAAGE,OACrB,CAAC,CAAC;MAEFE,SAAS,CAAC,CAAC;MACXN,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;EACD,MAAMM,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,mBAAmB,GAAG,CAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE;IAAA,CACZ;IAED,KAAK,IAAIC,WAAW,IAAID,mBAAmB,EAAE;MAC3C,MAAM,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGH,WAAW;MAC7BI,OAAO,CAACC,GAAG,CAACf,UAAU,CAACW,CAAC,CAAC,EAAGX,UAAU,CAACY,CAAC,CAAC,CAAC;MAC1C,IAAIZ,UAAU,CAACW,CAAC,CAAC,IAAIX,UAAU,CAACW,CAAC,CAAC,KAAKX,UAAU,CAACY,CAAC,CAAC,IAAIZ,UAAU,CAACW,CAAC,CAAC,KAAKX,UAAU,CAACa,CAAC,CAAC,EAAE;QACvFC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEjB,MAAM,CAAC;MACnC;IACF;EACF,CAAC;EAGD,oBACEH,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtB,OAAA,CAACH,KAAK;MAACW,OAAO,EAAIA,OAAQ;MAACe,KAAK,EAAElB;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACzB,EAAA,CArDQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}